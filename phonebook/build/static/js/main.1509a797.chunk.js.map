{"version":3,"sources":["services/phonebookService.js","components/PhonebookEntryForm.js","components/PhonebookSearchForm.js","components/DataDisplay.js","components/Notification.js","App.js","index.js"],"names":["baseURL","phonebookService","getPhonebook","axios","get","then","res","data","create","newEntry","post","remove","id","delete","update","put","PhonebookEntryForm","nameState","numberState","phonebookHandler","nameHandler","numberHandler","onSubmit","value","onChange","type","PhonebookSearchForm","props","searchState","searchHandler","DataDisplay","names","deleteHandler","map","entry","name","number","onClick","Notification","message","isError","errorStyle","color","className","style","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filtered","param","searchObject","setSearchObject","notification","setNotification","errorMessage","setErrorMessage","useEffect","setTimeout","console","log","filter","Object","keys","length","namesToShow","toUpperCase","search","event","target","preventDefault","entryObject","currentEntry","find","e","newObj","catch","err","response","error","selected","window","confirm","ReactDOM","render","document","getElementById"],"mappings":"sLACMA,EAAU,eAwBDC,EAFU,CAAEC,aAnBN,WAEnB,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAiBQC,OAd1B,SAAAC,GAEb,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAYgBI,OATlC,SAAAC,GACb,OAAOT,IAAMU,OAAN,UAAgBb,EAAhB,YAA2BY,KAQqBE,OAL1C,SAACF,EAAIH,GAElB,OADgBN,IAAMY,IAAN,UAAaf,EAAb,YAAwBY,GAAMH,GAC/BJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,U,OCAlBS,EAnBY,SAAC,GAA6E,IAA3EC,EAA0E,EAA1EA,UAAWC,EAA+D,EAA/DA,YAAaC,EAAkD,EAAlDA,iBAAkBC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,cACjF,OACE,qCACA,8CACA,uBAAMC,SAAUH,EAAhB,UACE,yCACQ,uBAAOI,MAAON,EAAWO,SAAUJ,OAE3C,iDACgB,uBAAOG,MAAOL,EAAaM,SAAUH,OAErD,8BACE,wBAAQI,KAAK,SAAb,0BCDKC,EAVa,SAACC,GACzB,IAAOC,EAA+BD,EAA/BC,YAAaC,EAAkBF,EAAlBE,cAEpB,OACE,mCACE,wDAA0B,uBAAON,MAAOK,EAAaJ,SAAUK,UCYxDC,EAjBK,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cACtBzB,EAAOwB,EAAME,KAAI,SAAAC,GAAK,OAC1B,8BACGA,EAAMC,KADT,KACiBD,EAAME,OAAQ,IAC7B,wBAAQb,MAAOW,EAAMtB,GAAIyB,QAASL,EAAlC,4BAFME,EAAMtB,OAOhB,OACE,gCACE,yCACCL,MCEQ+B,EAdM,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACvBC,EAAa,GAEnB,OAAgB,OAAZF,EAAyB,MACzBC,IACAC,EAAWC,MAAQ,OAGnB,qBAAKC,UAAU,eAAeC,MAAOH,EAArC,SACKF,MCkIEM,G,MArIH,WACV,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,kBAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAkCJ,mBAAS,oBAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAwCN,mBAAS,CAC/CO,UAAU,EACVC,MAAO,KAFT,mBAAOC,EAAP,KAAqBC,EAArB,KAIA,EAAwCV,mBAAS,MAAjD,mBAAOW,EAAP,KAAqBC,EAArB,KACA,EAAwCZ,mBAAS,MAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KAkFAC,qBAN0B,WACH,OAAjBJ,GAAuBK,YAAW,kBAAMJ,EAAgB,QAAO,KAC9C,OAAjBC,GAAuBG,YAAW,kBAAMF,EAAgB,QAAO,OAIxC,CAACH,EAAcE,IAG5CE,qBAtE4B,WAC1BE,QAAQC,IAAI,uBACZ/D,EAAiBC,eAAeG,MAAK,SAAAE,GACnCwD,QAAQC,IAAI,+BACZhB,EAAWzC,EAAK0D,QAAO,SAAA/B,GAAK,OAAIgC,OAAOC,KAAKjC,GAAOkC,OAAS,WAkEjC,CAACX,IAGhC,IAAMY,EAAcd,EAAaF,SAC7BN,EAAQkB,QAAO,SAAA/B,GAAK,OAAIA,EAAMC,KAAKmC,cAAcC,OAAOhB,EAAaD,MAAMgB,gBAAkB,KAC7FvB,EAEJ,OACE,gCACE,2CACA,cAAC,EAAD,CAAcR,QAASoB,EAAcnB,SAAS,IAC9C,cAAC,EAAD,CAAcD,QAASkB,IACvB,8BACE,cAAC,EAAD,CAAqB7B,YAAa2B,EAAaD,MAAOzB,cAxFlC,SAAA2C,GACG,KAAvBA,EAAMC,OAAOlD,MAAciC,EAAgB,CAAEH,UAAU,EAAOC,MAAOkB,EAAMC,OAAOlD,QACjFiC,EAAgB,CAAEH,UAAU,EAAMC,MAAOkB,EAAMC,OAAOlD,aAgGzD,8BACE,cAAC,EAAD,CACEN,UAAWgC,EACX/B,YAAaiC,EACbhC,iBA3EoB,SAAAqD,GAC1BA,EAAME,iBAEN,IAAMC,EAAc,CAClBxC,KAAMc,EACNb,OAAQe,GAEJyB,EAAe7B,EAAQ8B,MAAK,SAAAC,GAAC,OAAIA,EAAE3C,KAAKmC,gBAAkBK,EAAYxC,KAAKmC,iBAC7EM,GACFb,QAAQC,IAAI,UACZ/D,EACGa,OAAO8D,EAAahE,GAAI+D,GACxBtE,MAAK,SAAA0E,GACJhB,QAAQC,IAAI,kBAAmBe,EAAOnE,IACtC8C,EAAgB,GAAD,OAAIkB,EAAazC,KAAjB,yCACfe,EAAW,gBACXE,EAAa,qBAEd4B,OAAM,SAAAC,GACLlB,QAAQC,IAAIiB,GACZrB,EAAgB,GAAD,OAAIgB,EAAazC,KAAjB,kDAGnB4B,QAAQC,IAAI,QACZ/D,EACGO,OAAOmE,GACPtE,MAAK,SAAAC,GACJyD,QAAQC,IAAI,mBAAoBW,EAAYxC,MAC5CuB,EAAgB,GAAD,OAAIiB,EAAYxC,KAAhB,sCACfe,EAAW,kBACXE,EAAa,uBAEd4B,OAAM,SAAAC,GACLlB,QAAQC,IAAIiB,EAAIC,SAAS3E,MACzBqD,EAAgB,GAAD,OAAIqB,EAAIC,SAAS3E,KAAK4E,aA0CrC/D,YA/GgB,SAAAoD,GACtBtB,EAAWsB,EAAMC,OAAOlD,QA+GlBF,cA5GkB,SAAAmD,GACxBpB,EAAaoB,EAAMC,OAAOlD,YA8GxB,8BACE,cAAC,EAAD,CAAaQ,MAAOsC,EAAarC,cA/FT,SAAAwC,GAC5B,IAAMY,EAAWrC,EAAQ8B,MAAK,SAAAC,GAC5B,OAAOA,EAAElE,KAAO4D,EAAMC,OAAOlD,SAE3B6D,GACEC,OAAOC,QAAQ,8CACjBvB,QAAQC,IAAR,6BAAkCoB,EAASxE,KAC3CX,EAAiBU,OAAOyE,EAASxE,IAAIP,MAAK,SAAAC,GACxCyD,QAAQC,IAAI1D,GACZoD,EAAgB,GAAD,OAAI0B,EAASjD,KAAb,wDC7CzBoD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1509a797.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseURL = '/api/persons' // comment in dev\r\n//const baseURL = 'http://localhost:3001/persons' // comment in prod\r\n\r\nconst getPhonebook = () => {\r\n  const request = axios.get(baseURL)\r\n  return request.then(res => res.data)\r\n}\r\n\r\nconst create = newEntry => {\r\n  const request = axios.post(baseURL, newEntry)\r\n  return request.then(res => res.data)\r\n}\r\n\r\nconst remove = id => {\r\n  return axios.delete(`${baseURL}/${id}`)\r\n}\r\n\r\nconst update = (id, newEntry) => {\r\n  const request = axios.put(`${baseURL}/${id}`, newEntry)\r\n  return request.then(res => res.data)\r\n}\r\n\r\nconst phonebookService = { getPhonebook, create, remove, update }\r\n\r\nexport default phonebookService\r\n","\r\nconst PhonebookEntryForm = ({ nameState, numberState, phonebookHandler, nameHandler, numberHandler}) => {\r\n    return (\r\n      <>\r\n      <h2>Add an entry</h2>\r\n      <form onSubmit={phonebookHandler}>\r\n        <div>\r\n          Name: <input value={nameState} onChange={nameHandler}/>\r\n        </div>\r\n        <div>\r\n          Phone Number: <input value={numberState} onChange={numberHandler}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default PhonebookEntryForm","import React from \"react\"\r\n\r\nconst PhonebookSearchForm = (props) => {\r\n    const {searchState, searchHandler } = props\r\n  \r\n    return (\r\n      <>\r\n        <p>Find names containing: <input value={searchState} onChange={searchHandler}></input></p>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default PhonebookSearchForm","import React from 'react'\r\n\r\nconst DataDisplay = ({ names, deleteHandler }) => {\r\n  const data = names.map(entry => (\r\n    <p key={entry.id}>\r\n      {entry.name}: {entry.number}{' '}\r\n      <button value={entry.id} onClick={deleteHandler}>\r\n        Delete Entry\r\n      </button>\r\n    </p>\r\n  ))\r\n  return (\r\n    <div>\r\n      <h2>Numbers</h2>\r\n      {data}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DataDisplay\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message, isError }) => {\r\n    const errorStyle = {}\r\n\r\n    if (message === null) return null\r\n    if (isError)\r\n        errorStyle.color = 'red'\r\n\r\n    return (\r\n        <div className=\"notification\" style={errorStyle}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useEffect } from 'react'\r\nimport phonebookService from './services/phonebookService'\r\nimport PhonebookEntryForm from './components/PhonebookEntryForm'\r\nimport PhonebookSearchForm from './components/PhonebookSearchForm'\r\nimport DataDisplay from './components/DataDisplay'\r\nimport Notification from './components/Notification'\r\nimport './index.css'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('Enter a name..')\r\n  const [newNumber, setNewNumber] = useState('Enter a number..')\r\n  const [searchObject, setSearchObject] = useState({\r\n    filtered: false,\r\n    param: '',\r\n  })\r\n  const [notification, setNotification] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  const handleNameInput = event => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberInput = event => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleSearchInput = event => {\r\n    if (event.target.value === '') setSearchObject({ filtered: false, param: event.target.value })\r\n    else setSearchObject({ filtered: true, param: event.target.value })\r\n  }\r\n\r\n  const getPhonebookPromise = () => {\r\n    console.log('getting phonebook..')\r\n    phonebookService.getPhonebook().then(data => {\r\n      console.log('phonebook promise fulfilled')\r\n      setPersons(data.filter(entry => Object.keys(entry).length > 1))\r\n    })\r\n  }\r\n\r\n  const handlePhonebookDelete = event => {\r\n    const selected = persons.find(e => {\r\n      return e.id === event.target.value\r\n    })\r\n    if (selected)\r\n      if (window.confirm('Do you really want to delete this entry?')) {\r\n        console.log(`deleting entry id: ${selected.id}`)\r\n        phonebookService.remove(selected.id).then(res => {\r\n          console.log(res)\r\n          setNotification(`${selected.name} has been removed from the phonebook!`)\r\n        })\r\n      }\r\n  }\r\n\r\n  const handlePhonebookForm = event => {\r\n    event.preventDefault()\r\n    // create an object for entry to the phonebook\r\n    const entryObject = {\r\n      name: newName,\r\n      number: newNumber,\r\n    }\r\n    const currentEntry = persons.find(e => e.name.toUpperCase() === entryObject.name.toUpperCase())\r\n    if (currentEntry) {\r\n      console.log('update')\r\n      phonebookService\r\n        .update(currentEntry.id, entryObject)\r\n        .then(newObj => {\r\n          console.log('entry updated: ', newObj.id)\r\n          setNotification(`${currentEntry.name} has been updated with a new number!`)\r\n          setNewName('Enter a name')\r\n          setNewNumber('Enter a number')\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          setErrorMessage(`${currentEntry.name} was already removed from the phonebook!`)\r\n        })\r\n    } else {\r\n      console.log('push')\r\n      phonebookService\r\n        .create(entryObject)\r\n        .then(res => {\r\n          console.log('entry appended: ', entryObject.name)\r\n          setNotification(`${entryObject.name} has been added to the phonebook!`)\r\n          setNewName('Enter a name..')\r\n          setNewNumber('Enter a number..')\r\n        })\r\n        .catch(err => {\r\n          console.log(err.response.data)\r\n          setErrorMessage(`${err.response.data.error}`)\r\n        })\r\n    }\r\n  }\r\n\r\n  const resetNotification = () => {\r\n    if (notification !== null) setTimeout(() => setNotification(null), 3000)\r\n    if (errorMessage !== null) setTimeout(() => setErrorMessage(null), 7000)\r\n  }\r\n\r\n  // reset notification message\r\n  useEffect(resetNotification, [notification, errorMessage])\r\n\r\n  // get teh phonebook entries\r\n  useEffect(getPhonebookPromise, [notification])\r\n\r\n  // handle filtering\r\n  const namesToShow = searchObject.filtered\r\n    ? persons.filter(entry => entry.name.toUpperCase().search(searchObject.param.toUpperCase()) > -1)\r\n    : persons\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Notification message={errorMessage} isError={true} />\r\n      <Notification message={notification} />\r\n      <div>\r\n        <PhonebookSearchForm searchState={searchObject.param} searchHandler={handleSearchInput} />\r\n      </div>\r\n      {/*\r\n      <div>\r\n        <h4>Debug Panel</h4> \r\n        <p>Entry field: {newName}: {newNumber}</p> \r\n        <p>Search field: {searchObject.param} </p>\r\n        <p>isFiltered: {searchObject.filtered}</p>\r\n      </div>\r\n      */}\r\n      <div>\r\n        <PhonebookEntryForm\r\n          nameState={newName}\r\n          numberState={newNumber}\r\n          phonebookHandler={handlePhonebookForm}\r\n          nameHandler={handleNameInput}\r\n          numberHandler={handleNumberInput}\r\n        />\r\n      </div>\r\n      <div>\r\n        <DataDisplay names={namesToShow} deleteHandler={handlePhonebookDelete} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}